geom_smooth(aes(x=pos1,y=recomb_rate_q,color="recomb"))+
geom_smooth(aes(x=pos1,y=gene_count_q,color="count"))+
geom_smooth(aes(x=pos1,y=ks_q,color="ks"))+
facet_grid(lg~.)
outlier.dat %>%
mutate(recomb_rate_q = as.numeric(scale(recomb_rate))) %>%
mutate(gene_density_q = as.numeric(scale(gene_density))) %>%
mutate(gene_count_q = as.numeric(scale(gene_count))) %>%
mutate(ks_q = as.numeric(scale(ks))) %>%
ggplot(aes(xmin=pos1,xmax=pos2,ymin=1,ymax=2,fill=recomb_rate_q))+
geom_rect()+
geom_rect(aes(ymin=2+sp,ymax=3+sp,fill=gene_density_q))+
geom_rect(aes(ymin=3+sp*2,ymax=4+sp*2,fill=gene_count_q))+
geom_rect(aes(ymin=4+sp*3,ymax=5+sp*3,fill=ks_q))+
facet_wrap(~lg)+
scale_fill_gradientn(colours = myPalette(100))+
ylim(c(0,10))
myPalette <- colorRampPalette(rev(brewer.pal(11, "Spectral")), space="Lab")
sp<-0.5
outlier.dat %>%
mutate(recomb_rate_q = as.numeric(scale(recomb_rate))) %>%
mutate(gene_density_q = as.numeric(scale(gene_density))) %>%
mutate(gene_count_q = as.numeric(scale(gene_count))) %>%
mutate(ks_q = as.numeric(scale(ks))) %>%
ggplot(aes(xmin=pos1,xmax=pos2,ymin=1,ymax=2,fill=recomb_rate_q))+
geom_rect()+
geom_rect(aes(ymin=2+sp,ymax=3+sp,fill=gene_density_q))+
geom_rect(aes(ymin=3+sp*2,ymax=4+sp*2,fill=gene_count_q))+
geom_rect(aes(ymin=4+sp*3,ymax=5+sp*3,fill=ks_q))+
facet_wrap(~lg)+
scale_fill_gradientn(colours = myPalette(100))+
ylim(c(0,10))
type<-c(rep("a",5),rep("b",5))
species<-c((rep(1,5),rep(2,5)))
type<-c(rep("a",5),rep("b",5))
species<-c((rep(1,5),rep(2,5)))
data.frame(type,species)%>%
group_by(type,species)%>%
tally
species<-c((rep(1,5),rep(2,5)))
type<-c(rep("a",5),rep("b",5))
species<-c(rep(1,5),rep(2,5))
data.frame(type,species)%>%
group_by(type,species)%>%
tally
data.frame(type,species)
type<-c(rep("a",10),rep("b",10))
species<-c(rep(1,5),rep(2,5),rep(1,5),rep(2,5))
data.frame(type,species)%>%
group_by(type,species)%>%
tally
data.frame(type,species)
data.frame(type,species)%>%
group_by(type,species)%>%
tally
data.frame(type,species)%>%
group_by(type,species)%>%
tally %>%
tally
data.frame(type,species)%>%
group_by(type,species)%>%
tally
data.frame(type,species)%>%
group_by(type,species)
trait<-rnorm(20)
trait
data.frame(type,species,trait)%>%
group_by(type,species)
data.frame(type,species,trait)%>%
group_by(type,species)%>%
summarise(trait.mean=mean(trait))
outlier.dat %>%
ggplot(aes(x=pos1, y=as.numeric(dxy.outlier), color=geography))+
geom_smooth()+
geom_smooth(aes(y=gene_density,color="gene_density"))+
facet_wrap(~lg)
outlier.dat %>%
ggplot(aes(x=pos1, y=as.numeric(dxy.outlier), color=geography))+
geom_smooth()+
facet_wrap(~lg)
outlier.dat%>%
filter(lg!=19,!is.na(dxy))%>%
filter(grepl("allo",study)) %>%
filter(grepl("con",comparison)) %>%
mutate(study_com=paste(study,comparison,sep="_"))%>%
ggplot(.,aes(x=pos1,y=as.numeric(dxy.outlier),color="dxy"))+
geom_smooth()+
geom_smooth(aes(x=pos1,y=as.numeric(fst.outlier),color="fst"))+
facet_grid(study_com~lg)
mod1<-outlier.dat%>%
filter(lg!=19)%>%
mutate(gene.flow=!grepl("allopatric",study))%>%
mutate(div.selection=!grepl("allopatric.s",study))%>%
with(.,glm(dxy.outlier~recomb_rate*
gene.flow*
div.selection,
na.action="na.omit",
family=binomial))
summary(mod1)
Anova(mod1)
anova(mod1)
library("knitr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("dplyr")
library("reshape2")
library("ggplot2")
library("RColorBrewer")
library("hexbin")
library("nlme")
library("lme4")
library("car")
library("visreg")
# 2. Read in raw data
```{r}
all.data <- read.table(file=file.path("analysis_ready","stats_75k_2015-05-08.txt"),
header=TRUE,
na.strings=c("NA", "<NA>"))
```
# 3. FST / Dxy pre-processing
## FST / Dxt outlier detection (placeholder until Diana's version complete)
```{r}
# set negative FSTs to NA
all.data[!is.na(all.data$fst) & all.data$fst<0, ]$fst <- NA
# basic outlier detection with dplyr
is.outlier <- function(x){
return(x > quantile(x, na.rm=TRUE, probs=0.95)[1])
}
all.data.filt <- all.data %>%
group_by(comparison) %>%
mutate(fst.outlier = is.outlier(fst)) %>%
mutate(dxy.outlier = is.outlier(dxy)) %>%
mutate(both.outlier = dxy.outlier == TRUE & fst.outlier == TRUE)
outlier.dat <- data.frame(ungroup(all.data.filt))
```
# 4. Filtration of genomic variables
```{r}
# Recombination distances >25cM
outlier.dat$recomb_rate[outlier.dat$recomb_rate >= 25] <- NA
# Gene true/false
outlier.dat$in.a.gene <- as.numeric(!is.na(outlier.dat$gene_id))
# KS
outlier.dat$ks[outlier.dat$ks >= 1] <- NA
# dS
outlier.dat$ds[outlier.dat$ds >= 1] <- NA
# gene_count
outlier.dat$gene_count[outlier.dat$gene_count >= 20] <- NA
# marine pi
#outlier.dat$gene_count[outlier.dat$pi_pac_10k>=0.02]<-NA
outlier.dat %>%
filter(!is.na(recomb_rate)) %>%
ggplot(aes(x=pos1,y=recomb_rate))+
geom_point()+
facet_wrap(~lg)
outlier.dat %>%
ggplot(aes(x=pos1,y=gene_density))+
geom_smooth()+
facet_wrap(~lg)
eq = function(x){x*x}; x = (1:50); y = eq(x)
plot(x, y,  xlab = "X-axis", ylab = "Y-axis")
curve(eq, add=TRUE)
eq = function(x){e^x}; x = (1:50); y = eq(x)
plot(x, y,  xlab = "X-axis", ylab = "Y-axis")
curve(eq, add=TRUE)
e
ln(1)
log(1)
log(e)
eq = function(x){exp(1)^x}; x = (1:50); y = eq(x)
plot(x, y,  xlab = "X-axis", ylab = "Y-axis")
curve(eq, add=TRUE)
eq = function(x){exp(1)^-x}; x = (1:50); y = eq(x)
plot(x, y,  xlab = "X-axis", ylab = "Y-axis")
curve(eq, add=TRUE)
eq = function(x){exp(1)^-(x^2)}; x = (1:50); y = eq(x)
plot(x, y,  xlab = "X-axis", ylab = "Y-axis")
curve(eq, add=TRUE)
rm(list=ls())
library("dplyr")
library("reshape2")
library("ggplot2")
library("nlme")
library("lme4")
library("car")
library("visreg")
devtools::install_github("hilaryparker/cats")
library("devtools")
install.packages("devtools")
library("devtools")
devtools::install_github("hilaryparker/cats")
library("cats")
# data
all.data<-read.table(file=file.path("analysis_ready","stats_75k_2015-05-18.txt"),header=TRUE,na.strings=c("NA","<NA>"))
# set negative FSTs to NA
# this is sketchy, but for now i'm doing it
all.data[!is.na(all.data$fst) & all.data$fst<0, ]$fst <- NA
hist(all.data$fst)
hist(all.data$dxy)
#### magic janky outlier detection with dplyr
is.outlier<-function(x){
return(x>quantile(x,na.rm=TRUE,probs=0.95)[1])
}
all.data.filt<-all.data%>%
group_by(comparison)%>%
mutate(fst.outlier = is.outlier(fst))%>%
mutate(dxy.outlier = is.outlier(dxy))%>%
mutate(both.outlier = dxy.outlier == TRUE & fst.outlier == TRUE)
outlier.dat<-data.frame(ungroup(all.data.filt))
#### end magic janky outlier detection with dplyr
#### FILTERING EVS
# Recombination distances >25cM
outlier.dat$recomb_rate[outlier.dat$recomb_rate>=25]<-NA
# Gene true/false
outlier.dat$in.a.gene<-as.numeric(!is.na(outlier.dat$gene_id))
# KS
outlier.dat$ks[outlier.dat$ks>=1]<-NA
# dS
outlier.dat$ds[outlier.dat$ds>=1]<-NA
# dN
outlier.dat$dn[outlier.dat$dn>=0.4]<-NA
# gene_count
outlier.dat$gene_count[outlier.dat$gene_count>=20]<-NA
# marine pi
outlier.dat$pi_pac_10k[outlier.dat$pi_pac_10k>=0.02]<-NA
ggplot(data=outlier.dat,aes(x=fst,y=dxy))+
geom_point(alpha=0.05)+
geom_smooth()+
scale_alpha(range = c(0.001, 1))
library("dplyr")
library("reshape2")
library("ggplot2")
library("nlme")
library("lme4")
library("car")
library("visreg")
ggplot(data=outlier.dat,aes(x=fst,y=dxy))+
geom_point(alpha=0.05)+
geom_smooth()+
scale_alpha(range = c(0.001, 1))+
add_cat()
all.data<-read.table(file=file.path("analysis_ready","stats_75k_2015-05-18.txt"),header=TRUE,na.strings=c("NA","<NA>"))
# set negative FSTs to NA
# this is sketchy, but for now i'm doing it
all.data[!is.na(all.data$fst) & all.data$fst<0, ]$fst <- NA
hist(all.data$fst)
hist(all.data$dxy)
#### magic janky outlier detection with dplyr
is.outlier<-function(x){
return(x>quantile(x,na.rm=TRUE,probs=0.95)[1])
}
all.data.filt<-all.data%>%
group_by(comparison)%>%
mutate(fst.outlier = is.outlier(fst))%>%
mutate(dxy.outlier = is.outlier(dxy))%>%
mutate(both.outlier = dxy.outlier == TRUE & fst.outlier == TRUE)
outlier.dat<-data.frame(ungroup(all.data.filt))
#### end magic janky outlier detection with dplyr
#### FILTERING EVS
# Recombination distances >25cM
outlier.dat$recomb_rate[outlier.dat$recomb_rate>=25]<-NA
# Gene true/false
outlier.dat$in.a.gene<-as.numeric(!is.na(outlier.dat$gene_id))
# KS
outlier.dat$ks[outlier.dat$ks>=1]<-NA
# dS
outlier.dat$ds[outlier.dat$ds>=1]<-NA
# dN
outlier.dat$dn[outlier.dat$dn>=0.4]<-NA
# gene_count
outlier.dat$gene_count[outlier.dat$gene_count>=20]<-NA
# marine pi
outlier.dat$pi_pac_10k[outlier.dat$pi_pac_10k>=0.02]<-NA
ggplot(data=outlier.dat,aes(x=fst,y=dxy))+
geom_point(alpha=0.05)+
geom_smooth()+
scale_alpha(range = c(0.001, 1))+
add_cat()
ggplot(data=outlier.dat,aes(x=fst,y=dxy))+
add_cat()+
geom_point(alpha=0.05)+
geom_smooth()+
scale_alpha(range = c(0.001, 1))
ggplot(data=outlier.dat,aes(x=fst,y=dxy))+
add_cat()+
geom_point(alpha=0.05)+
geom_smooth()+
scale_alpha(range = c(0.001, 1))
ggplot(data=outlier.dat,aes(x=fst,y=dxy))+
add_cat()+
geom_point(alpha=0.05)+
geom_smooth()+
scale_alpha(range = c(0.001, 1))
?add_cat
ggplot(data=outlier.dat,aes(x=fst,y=dxy))+
add_cat()+
geom_point(alpha=0.05)+
geom_smooth()+
scale_alpha(range = c(0.001, 1))
ggplot(data=outlier.dat,aes(x=fst,y=dxy))+
add_cat()+
geom_point(alpha=0.05)+
geom_smooth()+
scale_alpha(range = c(0.001, 1))
ggplot(data=outlier.dat,aes(x=fst,y=dxy))+
add_cat()+
geom_point(alpha=0.05)+
geom_smooth()+
scale_alpha(range = c(0.001, 1))
ggplot(data=outlier.dat,aes(x=fst,y=dxy))+
add_cat()+
geom_point(alpha=0.05)+
geom_smooth()+
scale_alpha(range = c(0.001, 1))
ggplot(data=outlier.dat,aes(x=fst,y=dxy))+
add_cat()+
geom_point(alpha=0.05)+
geom_smooth()+
scale_alpha(range = c(0.001, 1))
ggplot(data=outlier.dat,aes(x=fst,y=dxy))+
add_cat()+
geom_point(alpha=0.05)+
geom_smooth()+
scale_alpha(range = c(0.001, 1))
ggplot(data=outlier.dat,aes(x=fst,y=dxy))+
add_cat()+
geom_point(alpha=0.05)+
geom_smooth()+
scale_alpha(range = c(0.001, 1))
ggplot(data=outlier.dat,aes(x=fst,y=dxy))+
add_cat()+
geom_point(alpha=0.05)+
geom_smooth()+
scale_alpha(range = c(0.001, 1))
add_cat
get_cat
stop_for_status
ggplot(data=outlier.dat,aes(x=fst,y=dxy))+
add_cat()+
geom_point(alpha=0.05)+
geom_smooth()+
scale_alpha(range = c(0.001, 1))
ggplot(data=outlier.dat,aes(x=fst,y=dxy))+
add_cat()+
geom_point(alpha=0.05)+
geom_smooth()+
scale_alpha(range = c(0.001, 1))
ggplot(data=outlier.dat,aes(x=pi_pac_75k,y=ds))+geom_smooth()+facet_wrap(~lg)
ggplot(data=outlier.dat,aes(x=pi_pac_75k,y=ds))+add_cat()+geom_smooth()+facet_wrap(~lg)
ggplot(data=outlier.dat,aes(x=fst,y=dxy))+
add_cat()+
geom_point(alpha=0.05)+
geom_smooth()+
scale_alpha(range = c(0.001, 1))
ggplot(data=outlier.dat,aes(x=pos1,y=recomb_rate))+
add_cat()+
geom_point()+
facet_wrap(~lg)
ggplot(data=outlier.dat,aes(x=fst,y=dxy))+
add_cat()+
geom_point(alpha=0.05)+
geom_smooth()+
scale_alpha(range = c(0.001, 1))
?add_cat
ggplot(data=outlier.dat,aes(x=fst,y=dxy))+
add_cat(lighten = 0.95)+
geom_point(alpha=0.05)+
geom_smooth()+
scale_alpha(range = c(0.001, 1))
library("dplyr")
library("reshape2")
library("ggplot2")
library("nlme")
library("lme4")
library("car")
library("visreg")
library("cats")
# data
all.data<-read.table(file=file.path("analysis_ready","stats_75k_2015-05-18.txt"),header=TRUE,na.strings=c("NA","<NA>"))
# set negative FSTs to NA
# this is sketchy, but for now i'm doing it
all.data[!is.na(all.data$fst) & all.data$fst<0, ]$fst <- NA
hist(all.data$fst)
hist(all.data$dxy)
#### magic janky outlier detection with dplyr
is.outlier<-function(x){
return(x>quantile(x,na.rm=TRUE,probs=0.95)[1])
}
all.data.filt<-all.data%>%
group_by(comparison)%>%
mutate(fst.outlier = is.outlier(fst))%>%
mutate(dxy.outlier = is.outlier(dxy))%>%
mutate(both.outlier = dxy.outlier == TRUE & fst.outlier == TRUE)
outlier.dat<-data.frame(ungroup(all.data.filt))
# Recombination distances >25cM
outlier.dat$recomb_rate[outlier.dat$recomb_rate>=25]<-NA
# Gene true/false
outlier.dat$in.a.gene<-as.numeric(!is.na(outlier.dat$gene_id))
# KS
outlier.dat$ks[outlier.dat$ks>=1]<-NA
# dS
outlier.dat$ds[outlier.dat$ds>=1]<-NA
# dN
outlier.dat$dn[outlier.dat$dn>=0.4]<-NA
# gene_count
outlier.dat$gene_count[outlier.dat$gene_count>=20]<-NA
# marine pi
outlier.dat$pi_pac_10k[outlier.dat$pi_pac_10k>=0.02]<-NA
# dxy vs ds
ggplot(data=outlier.dat,aes(x=ds,y=dxy))+
geom_point(alpha=0.05)+
geom_smooth()+
scale_alpha(range = c(0.001, 1))
# dxy vs ds
ggplot(data=outlier.dat,aes(x=dxy.outlier,y=ds))+
geom_boxplot()
# dxy vs ds
ggplot(data=outlier.dat,aes(x=dxy.outlier,y=ks))+
geom_boxplot()
rm(list=ls())
library("dplyr")
library("reshape2")
library("ggplot2")
library("nlme")
library("lme4")
library("car")
library("visreg")
library("cats")
# data
all.data<-read.table(file=file.path("analysis_ready","stats_75k_2015-05-20.txt"),header=TRUE,na.strings=c("NA","<NA>"))
# set negative FSTs to NA
# this is sketchy, but for now i'm doing it
all.data[!is.na(all.data$fst) & all.data$fst<0, ]$fst <- NA
hist(all.data$fst)
hist(all.data$dxy)
#### magic janky outlier detection with dplyr
is.outlier<-function(x){
return(x>quantile(x,na.rm=TRUE,probs=0.95)[1])
}
all.data.filt<-all.data%>%
group_by(comparison)%>%
mutate(fst.outlier = is.outlier(fst))%>%
mutate(dxy.outlier = is.outlier(dxy))%>%
mutate(both.outlier = dxy.outlier == TRUE & fst.outlier == TRUE)
outlier.dat<-data.frame(ungroup(all.data.filt))
#### end magic janky outlier detection with dplyr
#### FILTERING EVS
# Recombination distances >25cM
outlier.dat$recomb_rate[outlier.dat$recomb_rate>=25]<-NA
# Gene true/false
outlier.dat$in.a.gene<-as.numeric(!is.na(outlier.dat$gene_id))
# KS
outlier.dat$ks[outlier.dat$ks>=1]<-NA
# dS
outlier.dat$ds[outlier.dat$ds>=1]<-NA
# dN
outlier.dat$dn[outlier.dat$dn>=0.4]<-NA
# gene_count
outlier.dat$gene_count[outlier.dat$gene_count>=20]<-NA
# marine pi
outlier.dat$pi_pac_10k[outlier.dat$pi_pac_10k>=0.02]<-NA
outlier.dat %>%
mutate(com.study=paste0(study,comparison))%>%
ggplot(aes(x=pos1, y=as.numeric(dxy.outlier), color=com.study))+
geom_smooth(size=1)+
facet_wrap(~lg)
outlier.dat %>%
#mutate(com.study=paste0(study,comparison))%>%
ggplot(aes(x=pos1, y=as.numeric(dxy.outlier), color=geographic))+
geom_smooth(size=1)+
facet_wrap(~lg)
outlier.dat %>%
#mutate(com.study=paste0(study,comparison))%>%
ggplot(aes(x=pos1, y=as.numeric(dxy.outlier), color=geography))+
geom_smooth(size=1)+
facet_wrap(~lg)
outlier.dat%>%
filter(lg!=19)%>%
ggplot(aes(x=dxy.outlier,y=recomb_rate, color=geography))+
geom_boxplot()
list.files("stats")
<- list.files("stats", filter=".txt")
<- list.files("stats", pattern=".txt")
files<- list.files("stats", pattern=".txt")
files
fread('zcat russia_group2_slidingwindow_75000 copy.txt.gz')
library(data.table)
fread('zcat russia_group2_slidingwindow_75000 copy.txt.gz')
fread('zcat russia_group2_slidingwindow_75000_copy.txt.gz')
fread(system('zcat russia_group2_slidingwindow_75000_copy.txt.gz'))
system('zcat russia_group2_slidingwindow_75000_copy.txt.gz')
files<- list.files("stats", pattern=".txt", full.names = TRUE)
files
files[58]
system(paste0('zcat', files[58]))
system(paste('zcat', files[58]))
system(paste('zcat <', files[58]))
fread(system(paste('zcat <', files[58])))
file.lines <- system(paste('zcat <', files[58]))
?system
?fread
fread(system(paste('zcat <', files[58])))
express <- paste0('zcat <', files[58])
express
express <- paste0('zcat < ', files[58])
fread(express)
files
files<- list.files("stats", pattern=".txt")
files
print (files)
?print
cat (files)
files
files<- list.files("stats", pattern=".txt")
files
