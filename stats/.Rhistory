scale_y_discrete(expand = c(0, 0))+
coord_equal()+
theme_bw()+
facet_grid(.~trt)
myPalette <- colorRampPalette(rev(brewer.pal(11, "RdBu")), space="Lab")
trt.plot <- ggplot(longData.diff,aes(x = Var1, y = Var2, fill = value))
trt.plot+
geom_tile()+
scale_fill_gradientn(colours = myPalette(11))+
scale_x_discrete(expand = c(0, 0))+
scale_y_discrete(expand = c(0, 0))+
coord_equal()+
theme_bw(
)
myPalette <- colorRampPalette(rev(brewer.pal(11, "RdBu")), space="Lab")
trt.plot <- ggplot(longData.diff,aes(x = Var1, y = Var2, fill = value))
trt.plot+
geom_tile()+
scale_fill_gradientn(colours = myPalette(11))+
scale_x_discrete(expand = c(0, 0))+
scale_y_discrete(expand = c(0, 0))+
coord_equal()+
theme_bw()+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
myPalette <- colorRampPalette(rev(brewer.pal(11, "RdBu")), space="Lab")
trt.plot <- ggplot(longData.sig.all,aes(x = Var1, y = Var2, fill = value))
trt.plot+
geom_tile()+
scale_fill_gradientn(colours = myPalette(11))+
scale_x_discrete(expand = c(0, 0))+
scale_y_discrete(expand = c(0, 0))+
coord_equal()+
theme_bw()+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
facet_grid(.~trt)
myPalette <- colorRampPalette(rev(brewer.pal(11, "RdBu")), space="Lab")
trt.plot <- ggplot(longData.diff,aes(x = Var1, y = Var2, fill = value))
trt.plot+
geom_tile()+
scale_fill_gradientn(colours = myPalette(11))+
scale_x_discrete(expand = c(0, 0))+
scale_y_discrete(expand = c(0, 0))+
coord_equal()+
theme_bw()+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
head(longData.diff)
myPalette <- colorRampPalette(rev(brewer.pal(11, "RdBu")))
space="Lab"
myPalette <- colorRampPalette(rev(brewer.pal(11, "RdBu")), space="Lab")
library("RColorBrewer", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
require(RColorBrewer)
myPalette <- colorRampPalette(rev(brewer.pal(11, "RdBu")), space="Lab")
myPalette <- colorRampPalette(rev(brewer.pal(11, "RdBu")))
trt.plot <- ggplot(longData.diff,aes(x = Var1, y = Var2, fill = value))
trt.plot+
geom_tile()+
scale_fill_gradientn(colours = myPalette(20))+
scale_x_discrete(expand = c(0, 0))+
scale_y_discrete(expand = c(0, 0))+
coord_equal()+
theme_bw()+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
trt.plot <- ggplot(longData.diff,aes(x = Var1, y = Var2, fill = value))
trt.plot+
geom_tile()+
scale_fill_gradientn(colours = myPalette(11))+
scale_x_discrete(expand = c(0, 0))+
scale_y_discrete(expand = c(0, 0))+
coord_equal()+
theme_bw()+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
head(longData.diff)
longData.diff$value
as.numeric(longData.diff$value)
class(longData.diff)
class(longData.diff$value)
options("scipen"=100, "digits"=4)
trt.plot <- ggplot(longData.diff,aes(x = Var1, y = Var2, fill = value))
trt.plot+
geom_tile()+
scale_fill_gradientn(colours = myPalette(11))+
scale_x_discrete(expand = c(0, 0))+
scale_y_discrete(expand = c(0, 0))+
coord_equal()+
theme_bw()+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
longData.diff<-melt(pond.cor.trt$r-pond.cor.con$r)
longData.diff$Var1<-factor(longData.diff$Var1,levels=names(pond.exp.con))
longData.diff$Var2<-factor(longData.diff$Var2,levels=names(pond.exp.con))
trt.plot <- ggplot(longData.diff,aes(x = Var1, y = Var2, fill = value))
trt.plot+
geom_tile()+
scale_fill_gradientn(colours = myPalette(11))+
scale_x_discrete(expand = c(0, 0))+
scale_y_discrete(expand = c(0, 0))+
coord_equal()+
theme_bw()+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
myPalette <- colorRampPalette(rev(brewer.pal(11, "RdBu")), space="Lab")
trt.plot <- ggplot(longData.diff,aes(x = Var1, y = Var2, fill = value))
trt.plot+
geom_tile()+
scale_fill_gradientn(colours = myPalette(11))+
scale_x_discrete(expand = c(0, 0))+
scale_y_discrete(expand = c(0, 0))+
coord_equal()+
theme_bw()+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
longData.diff<-melt(diff.sym)
longData.diff$Var1<-factor(longData.diff$Var1,levels=names(pond.exp.con))
longData.diff$Var2<-factor(longData.diff$Var2,levels=names(pond.exp.con))
myPalette <- colorRampPalette(rev(brewer.pal(11, "RdBu")), space="Lab")
trt.plot <- ggplot(longData.diff,aes(x = Var1, y = Var2, fill = value))
trt.plot+
geom_tile()+
scale_fill_gradientn(colours = myPalette(11))+
scale_x_discrete(expand = c(0, 0))+
scale_y_discrete(expand = c(0, 0))+
coord_equal()+
theme_bw()+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
longData.diff<-melt(pond.cor.trt$r-pond.cor.con$r)
longData.diff$Var1<-factor(longData.diff$Var1,levels=names(pond.exp.con))
longData.diff$Var2<-factor(longData.diff$Var2,levels=names(pond.exp.con))
options("scipen"=100, "digits"=4)
####DIFFERENCE HEATMAP
trt.plot <- ggplot(longData.diff,aes(x = Var1, y = Var2, fill = value))
trt.plot+
geom_tile()+
scale_fill_gradientn(colours = myPalette(11))+
scale_x_discrete(expand = c(0, 0))+
scale_y_discrete(expand = c(0, 0))+
coord_equal()+
theme_bw()+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
diff.sym<-p.values.sig.trt-p.values.sig.con
#try editing dataframe
longData.diff<-melt(diff.sym)
longData.diff$Var1<-factor(longData.diff$Var1,levels=names(pond.exp.con))
longData.diff$Var2<-factor(longData.diff$Var2,levels=names(pond.exp.con))
####DIFFERENCE HEAT MAP
myPalette <- colorRampPalette(rev(brewer.pal(11, "RdBu")), space="Lab")
trt.plot <- ggplot(longData.diff,aes(x = Var1, y = Var2, fill = value))
trt.plot+
geom_tile()+
scale_fill_gradientn(colours = myPalette(11))+
scale_x_discrete(expand = c(0, 0))+
scale_y_discrete(expand = c(0, 0))+
coord_equal()+
theme_bw()+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
head(pondexp)
names(pondexp)
?for
ggplot(pondexp,aes(color=pondexp$Pond,y=pondexp$(names(pondexp)[21])))
ggplot(pondexp,aes(color=pondexp$Pond,y=pondexp$names(pondexp)[21])))
ggplot(pondexp,aes(color=pondexp$Pond,y=pondexp$names(pondexp)[21]))
require(Hmisc)
require(ggplot2)
require(gplots)
require(reshape2)
require(gdata)
require(fdrtool)
require(RColorBrewer)
ggplot(pondexp,aes(color=pondexp$Pond,y=pondexp$names(pondexp)[21]))
ggplot(pondexp,aes(color=pondexp$Pond,y=pondexp$names(pondexp)[21]))+geom_boxplot()
?geom_box
?geom_boxplot
ggplot(pondexp,aes(color=pondexp$Pond,y=pondexp[,21])+geom_boxplot()
ggplot(pondexp,aes(color=pondexp$Pond,y=pondexp[,21]))+geom_boxplot()
ggplot(pondexp,aes(x=pondexp$Pond,color=pondexp$Treatment,y=pondexp[,21]))+geom_boxplot()
head(pondexp)
pondexp[,21]
head(pondexp)
ggplot(pondexp,aes(x=as.factor(pondexp$Pond),color=pondexp$Treatment,y=pondexp[,21]))+geom_boxplot()
ggplot(pondexp,aes(x=as.factor(pondexp$Pond),color=as.factor(pondexp$Treatment),y=pondexp[,21]))+geom_boxplot()
pondexp$Treatment
as.factor(pondexp$Pond)
ggplot(pondexp,aes(x=as.factor(pondexp$Pond),fill=as.factor(pondexp$Treatment),y=pondexp[,21]))+geom_boxplot()
ggplot(pondexp,aes(x=as.factor(pondexp$Pond),fill=as.factor(pondexp$Treatment),y=pondexp[,22]))+geom_boxplot()
names(pondexp)
ggplot(pondexp,aes(x=as.factor(pondexp$Pond),fill=as.factor(pondexp$Treatment),y=pondexp[,23]))+geom_boxplot()
ggplot(pondexp,aes(x=as.factor(pondexp$Pond),fill=as.factor(pondexp$Treatment),y=pondexp[,36]))+geom_boxplot()
ggplot(pondexp,aes(x=as.factor(pondexp$Family),fill=as.factor(pondexp$Treatment),y=pondexp[,36]))+geom_boxplot()
ggplot(pondexp,aes(x=as.factor(pondexp$Family),fill=as.factor(pondexp$Treatment),y=pondexp[,35]))+geom_boxplot()
ggplot(pondexp,aes(x=as.factor(pondexp$Family),fill=as.factor(pondexp$Treatment),y=pondexp[,34]))+geom_boxplot()
ggplot(pondexp,aes(x=as.factor(pondexp$Family),fill=as.factor(pondexp$Treatment),y=pondexp[,33]))+geom_boxplot()
ggplot(pondexp,aes(x=as.factor(pondexp$Family),fill=as.factor(pondexp$Treatment),y=pondexp[,29]))+geom_boxplot()
ggplot(pondexp,aes(x=as.factor(pondexp$Family),fill=as.factor(pondexp$Treatment),y=pondexp[,33]))+geom_boxplot()
ggplot(pondexp,aes(x=as.factor(pondexp$Family),fill=as.factor(pondexp$Treatment),y=pondexp[,30]))+geom_boxplot()
ggplot(pondexp,aes(x=as.factor(pondexp$Family),fill=as.factor(pondexp$Treatment),y=pondexp[,31]))+geom_boxplot()
ggplot(pondexp,aes(x=as.factor(pondexp$Family),fill=as.factor(pondexp$Treatment),y=pondexp[,31]))+geom_boxplot()
ggplot(pondexp,aes(x=as.factor(pondexp$Family),fill=as.factor(pondexp$Treatment),y=pondexp[,32]))+geom_boxplot()
ggplot(pondexp,aes(x=as.factor(pondexp$Family),fill=as.factor(pondexp$Treatment),y=pondexp[,33]))+geom_boxplot()
ggplot(pondexp,aes(x=as.factor(pondexp$Family),fill=as.factor(pondexp$Treatment),y=pondexp[,34]))+geom_boxplot()
ggplot(pondexp,aes(x=as.factor(pondexp$Family),fill=as.factor(pondexp$Treatment),y=pondexp[,35]))+geom_boxplot()
ggplot(pondexp,aes(x=as.factor(pondexp$Family),fill=as.factor(pondexp$Treatment),y=pondexp[,36]))+geom_boxplot()
head(pondexp)
pondexp[,pondexp$Family=="D1"]
head(longData.cor.diff.sig)
?heatmap
###cor.diff.test fucntion
cor.diff.test = function(r1, r2, n1, n2, alternative = c("two.sided", "less", "greater")) {
Z1 = 0.5 * log( (1+r1)/(1-r1) )
Z2 = 0.5 * log( (1+r2)/(1-r2) )
diff = Z1 - Z2
SEdiff = sqrt( 1 / (n1 - 3) + 1 / (n2 - 3))
diff.Z = diff / SEdiff
if (alternative == "less") {
return(pnorm(diff.Z, lower.tail=F))
} else if (alternative == "greater") {
return(pnorm(-diff.Z, lower.tail=F))
} else if (alternative == "two.sided") {
return(2 * pnorm( abs(diff.Z), lower.tail=F))
} else {
warning(paste("Invalid alterantive", alternative), domain=NA)
return(NA)
}
}
###end function
#required libraries
require(Hmisc)
require(ggplot2)
require(gplots)
require(reshape2)
require(gdata)
require(fdrtool)
require(RColorBrewer)
pondexp<-read.csv(file.choose())
pondexp<-read.csv(file.choose())
ggplot(pondexp,aes(x=as.factor(pondexp$Family),fill=as.factor(pondexp$Treatment),y=pondexp[,33]))+geom_boxplot()
pondexp<-read.csv(file.choose())
trt.plot <- ggplot(longData.sig.all,aes(x = Var1, y = Var2, fill = value))
trt.plot+
geom_tile()+
scale_fill_gradientn(colours = myPalette(2))+
scale_x_discrete(expand = c(0, 0))+
scale_y_discrete(expand = c(0, 0))+
coord_equal()+
theme_bw()+
facet_grid(.~trt)
trt.plot <- ggplot(longData.sig.all,aes(x = Var1, y = Var2, fill = value))
trt.plot+
geom_tile()+
scale_fill_gradientn(colours = myPalette(1))+
scale_x_discrete(expand = c(0, 0))+
scale_y_discrete(expand = c(0, 0))+
coord_equal()+
theme_bw()+
facet_grid(.~trt)
trt.plot <- ggplot(longData.sig.all,aes(x = Var1, y = Var2, fill = value))
trt.plot+
geom_tile()+
scale_fill_gradientn(colours = myPalette(16))+
scale_x_discrete(expand = c(0, 0))+
scale_y_discrete(expand = c(0, 0))+
coord_equal()+
theme_bw()+
facet_grid(.~trt)
trt.plot <- ggplot(longData.sig.all,aes(x = Var1, y = Var2, fill = value))
trt.plot+
geom_tile()+
scale_fill_gradientn(colours = myPalette(16))+
scale_x_discrete(expand = c(0, 0))+
scale_y_discrete(expand = c(0, 0))+
coord_equal()+
theme_bw()+
facet_grid(.~trt)
trt.plot <- ggplot(longData.sig.all,aes(x = Var1, y = Var2, fill = value))
trt.plot+
geom_tile()+
scale_fill_gradientn(colours = myPalette(16))+
scale_x_discrete(expand = c(0, 0))+
scale_y_discrete(expand = c(0, 0))+
coord_equal()+
theme_bw()+
theme(axis.text.x = element_text(angle = 90, size=10,hjust=1,vjust=0))+
facet_grid(.~trt)
trt.plot <- ggplot(longData.sig.all,aes(x = Var1, y = Var2, fill = value))
trt.plot+
geom_tile()+
scale_fill_gradientn(colours = myPalette(16))+
scale_x_discrete(expand = c(0, 0))+
scale_y_discrete(expand = c(0, 0))+
coord_equal()+
theme_bw()+
theme(axis.text.x = element_text(angle = 90, size=14,hjust=1,vjust=0))+
facet_grid(.~trt)
myPalette <- colorRampPalette(rev(brewer.pal(11, "RdBu")), space="Lab")
trt.plot <- ggplot(sym.long.all,aes(x = Var1, y = Var2, fill = value))
trt.plot+
geom_tile()+
scale_fill_gradientn(colours = myPalette(11))+
scale_x_discrete(expand = c(0, 0))+
scale_y_discrete(expand = c(0, 0))+
coord_equal()+
theme_bw()+
theme(axis.text.x = element_text(angle = 90, size=10,hjust=1,vjust=0))+
facet_grid(.~trt)
myPalette <- colorRampPalette(rev(brewer.pal(11, "RdBu")), space="Lab")
trt.plot <- ggplot(longData.diff,aes(x = Var1, y = Var2, fill = value))
trt.plot+
geom_tile()+
scale_fill_gradientn(colours = myPalette(11))+
scale_x_discrete(expand = c(0, 0))+
scale_y_discrete(expand = c(0, 0))+
coord_equal()+
theme_bw()+
theme(axis.text.x = element_text(angle = 90,size=12,hjust=1,vjust=0),axis.text.y = element_text(hjust = 1,size=12))
myPalette <- colorRampPalette(rev(brewer.pal(11, "RdBu")), space="Lab")
trt.plot <- ggplot(sym.long.all,aes(x = Var1, y = Var2, fill = value))
trt.plot+
geom_tile()+
scale_fill_gradientn(colours = myPalette(11))+
scale_x_discrete(expand = c(0, 0))+
scale_y_discrete(expand = c(0, 0))+
coord_equal()+
theme_bw()+
theme(axis.text.x = element_text(angle = 90, size=10,hjust=1,vjust=0))+
facet_grid(.~trt)
myPalette <- colorRampPalette(rev(brewer.pal(11, "RdBu")), space="Lab")
trt.plot <- ggplot(sym.long.all,aes(x = Var1, y = Var2, fill = value))
trt.plot+
geom_tile()+
scale_fill_gradientn(colours = myPalette(11))+
scale_x_discrete(expand = c(0, 0))+
scale_y_discrete(expand = c(0, 0))+
coord_equal()+
theme_bw()+
theme(axis.text.x = element_text(angle = 90, size=10,hjust=1,vjust=0))+
facet_grid(.~trt)
myPalette <- colorRampPalette(rev(brewer.pal(11, "RdBu")), space="Lab")
trt.plot <- ggplot(sym.long.all,aes(x = Var1, y = Var2, fill = value))
trt.plot+
geom_tile()+
scale_fill_gradientn(colours = myPalette(11))+
scale_x_discrete(expand = c(0, 0))+
scale_y_discrete(expand = c(0, 0))+
coord_equal()+
theme_bw()+
theme(axis.text.x = element_text(angle = 90, size=10,hjust=1,vjust=0))+
facet_grid(.~trt)
trt.plot <- ggplot(longData.sig.all,aes(x = Var1, y = Var2, fill = value))
trt.plot+
geom_tile()+
scale_fill_gradientn(colours = myPalette(16))+
scale_x_discrete(expand = c(0, 0))+
scale_y_discrete(expand = c(0, 0))+
coord_equal()+
theme_bw()+
theme(axis.text.x = element_text(angle = 90, size=14,hjust=1,vjust=0))+
facet_grid(.~trt)
trt.plot <- ggplot(longData.sig.all,aes(x = Var1, y = Var2, fill = value))
trt.plot+
geom_tile()+
scale_fill_gradientn(colours = myPalette(16))+
scale_x_discrete(expand = c(0, 0))+
scale_y_discrete(expand = c(0, 0))+
coord_equal()+
theme_bw()+
theme(axis.text.x = element_text(angle = 90, size=14,hjust=1,vjust=0))+
facet_grid(.~trt)
recomb<-read.table(file.choose())
head(recbom)
head(recomb)
recomb<-read.table(file.choose(),names=TRUE)
?read.table
recomb<-read.table(file.choose(),header=TRUE)
head(recomb)
head(recomb)
home.dir<-"~/Documents/Science/Projects/Ph.D./Genome Meta Analysis/roesti"
library(ggplot2)
library(RColorBrewer)
library(scales)
library(reshape2)
library(plyr)
library(zoo)
library(ggplot2)
library(RColorBrewer)
library(scales)
library(reshape2)
library(plyr)
library(zoo)
rm(list=ls())
library(reshape2)
library(dplyr)
home.dir<-"~/Documents/Science/Projects/Ph.D./Genome Meta Analysis/stats"
ev.dir<-"~/Documents/Science/Projects/Ph.D./Genome Meta Analysis/evs"
setwd(home.dir)
stats.filenames<-list.files(pattern="*stats.txt")
stats.file<-read.table(stats.filenames[1],header=TRUE)
stats.file$lg<-as.numeric(as.roman(sapply(strsplit(as.character(stats.file$CHROM),"group"), function(x) x[2])))
stats.file<-stats.file[!is.na(stats.file$lg),]
names(stats.file)<-tolower(names(stats.file))
stats.file<-select(stats.file,-c(chrom.pos,chrom))
stats.file<-data.frame(lg=stats.file$lg,select(stats.file,-lg))
recomb<-read.table(file=file.path(ev.dir,"recomb_rates.txt"),header=TRUE)
matchEV <- function(x,data) {
tmp<-data[data$pos1<=x,]
tmp2<-tmp[tmp$pos2>=x,]
#return the last column
return(tmp2[,length(names(tmp2))])
}
rates.index<-1
matched.rates<-vector(mode="character",length=length(stats.file$lg))
for (j in 1:max(stats.file$lg)){
if(j==1){
start.time<-Sys.time()
}
stats.file.lg<-stats.file[stats.file$lg==j,]
recomb.lg<-recomb[recomb$lg==j,]
rates<-sapply(stats.file.lg$pos,matchEV,data=recomb.lg)
rates<-as.numeric(as.character(rates))
if(j==1){
rates.index1<-1
rates.index2<-length(rates)
}
else{
rates.index1<-1+rates.index2
rates.index2<-rates.index2+length(rates)
}
matched.rates[rates.index1:rates.index2]<-rates
if(j==max(stats.file$lg)){
end.time<-Sys.time()
print (paste("matching ev took",end.time-start.time))
}
else{
print (paste("lg",j,"complete at",Sys.time(),"index",rates.index1,"to",rates.index2))
}
}#end match
head(matched.rates)
class(matched.rates)
write.table(data.frame(stats.file,recomb=as.numeric(matched.rates)),file=file.path(home.dir,paste(stats.filenames[1],"_evs.txt",sep="")),row.names=FALSE)
heda(stats.file)
head(stats.file)
?arrange
test<-arrange(stats.file, lg)
head(test)
write.table(data.frame(stats.file,recomb=as.numeric(matched.rates)),file=file.path(home.dir,paste(stats.filenames[1],"_evs.txt",sep="")),row.names=FALSE)
stats.file<-arrange(stats.file, lg)
write.table(data.frame(stats.file,recomb=as.numeric(matched.rates)),file=file.path(home.dir,paste(stats.filenames[1],"_evs.txt",sep="")),row.names=FALSE)
file.path(home.dir,paste("matched/",stats.filenames[1],"_evs.txt",sep=""))
dir.create(file.path(home.dir, "matched"), showWarnings = FALSE)
if(require("dplyr")){
print("dplyr is loaded correctly")
} else {
print("trying to install dplyr")
install.packages("dplyr")
if(require(dplyr)){
print("dplyr installed and loaded")
} else {
stop("could not install dplyr")
}
}
write.table(data.frame(stats.file,recomb=as.numeric(matched.rates)),file=file.path(home.dir,paste("matched/",stats.filenames[i],"_evs.txt",sep="")),row.names=FALSE)
write.table(data.frame(stats.file,recomb=as.numeric(matched.rates)),file=file.path(home.dir,paste("matched/",stats.filenames[1],"_evs.txt",sep="")),row.names=FALSE)
head(stats.filenames)
stats.filenames<-list.files(pattern="*stats.txt")
head(stats.filenames)
stats.filenames<-list.files(pattern="stats.txt")
head(stats.filenames)
file.path(getwd,stats.filenames[1])
file.path(getwd(),stats.filenames[1])
stats.file<-read.table(file.path(getwd(),stats.filenames[1]),header=TRUE)
home.dir<-"~/Documents/Science/Projects/Ph.D./Genome Meta Analysis/stats"
ev.dir<-"~/Documents/Science/Projects/Ph.D./Genome Meta Analysis/evs"
setwd(home.dir)
?list.files
ev.folders-list.files(path=ev.dir)
ev.folders<-list.files(path=ev.dir)
ev.folders
ev.dir<-"~/Documents/Science/Projects/Ph.D./Genome Meta Analysis/evs/nonwindow"
ev.folders<-list.files(path=ev.dir)
ev.files<-list.files(path=file.path(ev.dir,ev.folders[1]))
matchEV <- function(x,data) {
tmp<-data[data$pos1<=x,]
tmp2<-tmp[tmp$pos2>=x,]
#return the last column
return(tmp2[,length(names(tmp2))])
}
ev.files
ev.lg<-read.delim(file=file.path(ev.dir,ev.files[1]))
file.path(ev.dir,ev.files[1])
ev.lg<-read.delim(file=file.path(ev.dir,ev.folders[1],ev.files[1]))
rates.index<-1
matched.rates<-vector(mode="character",length=length(stats.file$lg))
for (j in 1:max(stats.file$lg)){
if(j==1){
start.time<-Sys.time()
}
stats.file.lg<-stats.file[stats.file$lg==j,]
#change ev.folders[1] when implementing ev type loop
ev.lg<-read.delim(file=file.path(ev.dir,ev.folders[1],ev.files[j]))
rates<-sapply(stats.file.lg$pos,matchEV,data=ev.lg)
rates<-as.numeric(as.character(rates))
if(j==1){
rates.index1<-1
rates.index2<-length(rates)
}
else{
rates.index1<-1+rates.index2
rates.index2<-rates.index2+length(rates)
}
matched.rates[rates.index1:rates.index2]<-rates
if(j==max(stats.file$lg)){
end.time<-Sys.time()
print (paste("matching ev took",end.time-start.time))
}
else{
print (paste("lg",j,"complete at",Sys.time(),"index",rates.index1,"to",rates.index2))
}
}#end match
